<Page x:Class="Sunrise.MultipleChoice.MainWindow"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Sunrise.MultipleChoice"
      mc:Ignorable="d"
      Title="MainWindow">

    <Page.Resources>

        <Style x:Key="sampleTextBox">
            <Setter Property="Control.FontFamily" Value="Verdana"/>
            <Setter Property="Control.FontSize" Value="11px"/>
            <Setter Property="Control.FontWeight" Value="Bold"/>
            <Setter Property="Control.Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <GradientStop Color="#FFFFD190" Offset="0.2"/>
                        <GradientStop Color="Orange" Offset="0.85"/>
                        <GradientStop Color="#FFFFD190" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Fill Brushes -->

        <LinearGradientBrush x:Key="MenuItemBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#1B1B1C" Offset="0.0"/>
                    <GradientStop Color="#1B1B1C" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>




        <LinearGradientBrush x:Key="NormalBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="Green" Offset="0.0"/>
                    <GradientStop Color="Green" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#CCC" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF2D2D30" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Green" />


        <!-- Border Brushes -->

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />


        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4,0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
                    <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{StaticResource MenuItemBrush}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          BorderThickness="1" >
                            <ScrollViewer CanContentScroll="True" >
                                <StackPanel   
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->

        <ControlTemplate 
  x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource NormalBrush}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuItem -->

        <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
  TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="120"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                    <Border 
        Name="Check"  
        Width="20" Height="32" 
        Visibility="Collapsed"
        Margin="6,0,6,0" 
        Background="{StaticResource MenuItemBrush}"
        BorderThickness="1"
        BorderBrush="{StaticResource MenuItemBrush}">
                        <Path 
          Name="CheckMark"
          Width="7" Height="7" 
          Visibility="Hidden" 
          SnapsToDevicePixels="False" 
          Stroke="{StaticResource GlyphBrush}"
          StrokeThickness="2"
          Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,0,2"
        DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>

                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- SubmenuHeader -->

        <ControlTemplate 
  x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
  TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="13"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter 
        Name="Icon"
        Margin="6,0,6,0"
        VerticalAlignment="Center"
        ContentSource="Icon"/>
                    <ContentPresenter 
        Name="HeaderHost"
        Grid.Column="1"
        ContentSource="Header"
        RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
        Grid.Column="2"
        Text="{TemplateBinding InputGestureText}"
        Margin="5,2,2,2"
        DockPanel.Dock="Right"/>
                    <Path 
        Grid.Column="3"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Data="M 0 0 L 0 7 L 4 3.5 Z" 
        Fill="{StaticResource GlyphBrush}" />
                    <Popup 
        Name="Popup"
        Placement="Right"
        HorizontalOffset="-4" 
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                        <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          Background="{StaticResource MenuItemBrush}"
          BorderBrush="{StaticResource SolidBorderBrush}"
          BorderThickness="1" >
                            <ScrollViewer CanContentScroll="True">
                                <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- MenuItem Style -->

        <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>



        <Style x:Key="menuItem" TargetType="MenuItem">

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="#0a99f3" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Background" Value="#0a99f3" />
                </Trigger>
            </Style.Triggers>

        </Style>

        
        
        <!-- Button 

        <Style  x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF2D2D30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>

                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Opacity" Value="0.9" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>

            </Style.Triggers>
        </Style>-->


    </Page.Resources>


    <DockPanel LastChildFill="True" Background="#FF2D2D30" MinWidth="1024"  MinHeight="800">

        <StackPanel DockPanel.Dock="Top">
            <ToolBarTray  Background="#FF2D2D30">
                <ToolBar Background="#FF2D2D30">

                    <Menu Background="#FF2D2D30">
                        <MenuItem Header="File" Foreground="White" FontSize="14.667"  Style="{StaticResource menuItem}">

                            <MenuItem Header="File" Foreground="White" FontSize="14.667" Style="{StaticResource menuItem}" Margin="25,0,0,0"/>

                            <MenuItem Header="MenuItem1" Style="{StaticResource menuItem}" Margin="5,0,0,0">
                                <MenuItem.Icon>
                                    <Image Source="images/test.png" Height="20" />
                                </MenuItem.Icon>
                            </MenuItem>

                            <Separator Background="White" Margin="0,5,0,5"/>

                            <MenuItem Header="MenuItem1" Style="{StaticResource menuItem}" Margin="5,0,0,0">
                                <MenuItem.Icon>
                                    <Image Source="images/test.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>

                            <Separator Background="White" Margin="0,5,0,5"/>

                            <MenuItem Header="MenuItem1" Style="{StaticResource menuItem}" Margin="5,0,0,5">
                                <MenuItem.Icon>
                                    <Image Source="images/test.png" Height="20"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                    </Menu>

                    <Menu Background="#FF2D2D30">
                        <MenuItem Header="Edit" Foreground="White" FontSize="14.667" Style="{StaticResource menuItem}" >

                            <MenuItem Header="MenuItem1" Style="{StaticResource menuItem}"/>
                        </MenuItem>
                    </Menu>

                    <Menu Background="#FF2D2D30">
                        <MenuItem Header="View" Foreground="White" FontSize="14.667" Style="{StaticResource menuItem}">

                            <MenuItem Header="MenuItem1" Style="{StaticResource menuItem}"/>
                        </MenuItem>
                    </Menu>

                    <Menu Background="#FF2D2D30">
                        <MenuItem Header="Project" Foreground="White" FontSize="14.667" Style="{StaticResource menuItem}">

                            <MenuItem Header="MenuItem1" Style="{StaticResource menuItem}"/>
                        </MenuItem>
                    </Menu>

                </ToolBar>
            </ToolBarTray>


            <Border  BorderThickness="2" BorderBrush="#FF2D2D30">
                <ToolBarPanel>
                    <ToolBar Background="#FF2D2D30" Height="32">

                        <Button>
                            <Button.Content>
                                <Image Source="images/search.png" />
                            </Button.Content>

                        </Button>

                        <Separator Height="30" Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>

                        <Button  >
                            <Image Source="images/test.png" />
                        </Button>

                        <Separator Height="30"  Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>

                        <Button >
                            <Image Source="images/test.png" />
                        </Button>

                        <Separator Height="30"  Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>

                        <Button >
                            <Image Source="images/test.png" />
                        </Button>

                        <Separator Height="30"  Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>

                        <Button  >
                            <Image Source="images/test.png" />
                        </Button>

                        <Separator Height="30"  Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>

                        <Button >
                            <Image Source="images/test.png" />
                        </Button>

                        <Separator Height="30"  Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>

                        <Button >
                            <Image Source="images/test.png" />
                        </Button>
                        <Separator Height="30"  Margin="7,0,7,0" VerticalAlignment="Top" Width="0" Background="#FF434357"/>


                    </ToolBar>

                </ToolBarPanel>


            </Border>



        </StackPanel>






        <StackPanel  Name="BottomStack" DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Width="60" Height="30"></Button>
            <Button Width="60" Height="30"></Button>
            <Button Width="60" Height="30"></Button>
            <Button Width="60" Height="30"></Button>

        </StackPanel>
        <!-- 
        <StackPanel Name="LeftStack" Orientation="Vertical" Margin="0,30,0,0">
            <Button x:Name="button" Content="Button" Width="75"/>
            <Button x:Name="button1" Content="Button" Width="75"/>
            <Button x:Name="button2" Content="Button" Width="75"/>
            <Button x:Name="button3" Content="Button" Width="75"/>

        </StackPanel>

       <StackPanel Name="RightStack" DockPanel.Dock="Right" Orientation="Vertical" Margin="0,30,0,0">
            <Button x:Name="button4" Content="Button" Width="75"/>
            <Button x:Name="button5" Content="Button" Width="75"/>
            <Button x:Name="button6" Content="Button" Width="75"/>
            <Button x:Name="button7" Content="Button" Width="75"/>

        </StackPanel >
    !-->

        <StackPanel Name="MainStack" Orientation="Vertical" Background="#1B1B1C">
            <Grid HorizontalAlignment="Stretch" Margin="50">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="25*"/>
                    <ColumnDefinition Width="25*"/>

                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="25*"/>
                    <RowDefinition Height="25*"/>

                </Grid.RowDefinitions>

                <Label x:Name="nameLB" Content="Name" Grid.Row="0" Grid.Column="0" HorizontalAlignment="left" VerticalAlignment="Center" FontSize="16" Background="#FF2D2D30" Foreground="#FF916B6B"/>
                <Label x:Name="lastnameLB" Content="Lastname" Grid.Row="0" Grid.Column="3" HorizontalAlignment="left" VerticalAlignment="Center"  FontSize="16" Foreground="#FF916B6B"/>

                <Label x:Name="passportLB" Content="Passport" Grid.Row="1" Grid.Column="0" HorizontalAlignment="left" VerticalAlignment="Center"  FontSize="16" Foreground="#FF916B6B"/>
                <Label x:Name="emailLB" Content="Email" Grid.Row="1" Grid.Column="3" HorizontalAlignment="left" VerticalAlignment="Center"  FontSize="16" Foreground="#FF916B6B"/>

                <Label x:Name="usernameLB" Content="Username" Grid.Row="2" Grid.Column="0" HorizontalAlignment="left" VerticalAlignment="Center"  FontSize="16" Foreground="#FF916B6B"/>
                <Label x:Name="passwordLB" Content="Password" Grid.Row="2" Grid.Column="3" HorizontalAlignment="left" VerticalAlignment="Center"  FontSize="16" Foreground="#FF916B6B" Background="#FF171717"/>

                <TextBox x:Name="nameTB"  Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="16"/>
                <TextBox x:Name="lastnameTB"  Grid.Row="0" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="16"/>

                <TextBox x:Name="passportTB"  Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  FontSize="16"/>
                <TextBox x:Name="emailTB" Grid.Row="1" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  FontSize="16"/>

                <TextBox x:Name="usernameTB"  Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  FontSize="16"/>
                <TextBox x:Name="passwordTB"  Grid.Row="2" Grid.Column="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  FontSize="16"/>

                <Label x:Name="IDLB" Content="ID" Grid.Row="5" Grid.Column="0" HorizontalAlignment="left" VerticalAlignment="Center" FontSize="16" Foreground="#FF916B6B"/>
                <TextBox x:Name="IDTB"  Grid.Row="5" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  FontSize="16"/>
                <DatePicker Grid.Column="4" HorizontalAlignment="Stretch"  Grid.Row="3" VerticalAlignment="Top"/>
                <Label x:Name="label" Content="BirthDate" Grid.Column="3" HorizontalAlignment="Left" Grid.Row="3" VerticalAlignment="Top"  FontSize="16" Foreground="#FF916B6B"/>

            </Grid>
            <DataGrid Name="table" CanUserAddRows="True" ItemsSource="{Binding Path=Student}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Width="25*" Binding="{Binding Id}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Name" Width="25*" Binding="{Binding Name}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Lastname" Width="25*" Binding="{Binding Lastname}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Passport" Width="25*" Binding="{Binding Passport}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Email" Width="25*" Binding="{Binding Email}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Username" Width="25*" Binding="{Binding Username}"></DataGridTextColumn>
                    <DataGridTextColumn Header="Password" Width="25*" Binding="{Binding Password}"></DataGridTextColumn>
                </DataGrid.Columns>

                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>

                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>


            </DataGrid>

            <Button Content="Button" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="50" Height="50" HorizontalContentAlignment="Left" BorderBrush="{x:Null}" Foreground="{x:Null}" Margin="50,0,0,0">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Background" Value="Green"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGoldenrod"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="LoginBt" Content="Button" Width="97" Height="44" Click="login_Click"/>


        </StackPanel>






    </DockPanel>


</Page>
